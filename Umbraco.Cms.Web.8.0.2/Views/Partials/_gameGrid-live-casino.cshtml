@inherits Umbraco.Web.Mvc.UmbracoViewPage<TotalCode.Core.Models.Pages.GamePageViewModel>


<div class="game-grid" ng-show="vm.gameGrid.length > 0">
    <div class="grid">
        <div class="item live-casino bounceIn" ng-repeat="game in vm.gameGrid | gamefilter: vm.filter" ng-style="{'animation-delay': (150 + $index * 1000 / vm.gameGrid.length ) + 'ms' }" data-gameprovider="{{game.GameProvider}}" data-subcategory="{{game.SubCategory}}">
            <div class="tableLimits">
                {{game.Currency_symbol}} {{game.Limit_min}}
                <span class="maxValue"><span class="maxValueText"> - {{game.Limit_max}}</span></span>
            </div>
            <div ng-show="game.NewGame && vm.category !== 'poker'" class="corner-ribbon top-left sticky red shadow">@Umbraco.GetDictionaryValue("[Games]NewGame", "New")</div>
            <div class="favorite-game" ng-show="game.Favourite && vm.category !== 'poker'" title="@Umbraco.GetDictionaryValue("[Games]FavoriteGame", "Favorite")">
                <svg class="checked-star is-active" viewBox="0 0 14 14" width="14px">
                    <use xlink:href="~/img/sprite-sports.svg#icon-favourites"></use>
                </svg>
            </div>
            <a href="#popup-login" rel="modal:open" ng-show="!vm.isLoggedIn">
                <img ng-src="{{ vm.getThumbnailImageL(game.GameImages).Url }}" alt="{{game.Name}}" class="e{{game.GameId}}">
            </a>
            <a href=""
               ng-href="?gameId={{game.GameId}}"
               target="_self"
               rel="{{ game.DemoEnabled ? 'modal:open':''}}"
               ng-click="vm.selectGame(game)"
               ng-show="vm.isLoggedIn">
                <img ng-src="{{ vm.getThumbnailImageL(game.GameImages).Url }}" alt="{{game.Name}}" class="e{{game.GameId}}">
            </a>
            <div ng-show="item.isExpanded" class="info-overlay">
                <div class="info-overlay-data">
                    <div class="info-overlay-block">Dealer</div> <span>{{game.DealerName}}</span><br />
                    <div class="info-overlay-block">Limits</div> <span class="info-overlay-color">{{game.Currency_symbol}} {{game.Limit_min}} -  {{game.Limit_max}}</span><br /><br />
                    <span>{{game.Description}}</span><br />
                </div>
            </div>
            <div class="game-title-wrapper-live-casino">
                <div class="baccarat" style="width:100%; height:6vh;" ng-show="game.GameType == 'Baccarat'">
                        <svg xmlns="http://www.w3.org/2000/svg" class="road-1 svg--1G1Yo" data-role="Big-road" x="0" y="0" width="40" height="55" viewBox="0 0 40 6" style="width: 100%; height:55px; vertical-align: bottom;">
                            <svg class="svg--YDulJ" viewBox="0 0 40 6">
                                <rect x="0" y="0" fill="#ffffff" width="40" height="6"></rect>
                                <line x1="0" x2="40" y1="0.025" y2="0.025" stroke="rgb(167, 169, 172)" style="stroke-width: 0.05;"></line>
                                <line x1="0" x2="40" y1="1" y2="1" stroke="rgb(167, 169, 172)" style="stroke-width: 0.05;"></line>
                                <line x1="0" x2="40" y1="2" y2="2" stroke="rgb(167, 169, 172)" style="stroke-width: 0.05;"></line>
                                <line x1="0" x2="40" y1="3" y2="3" stroke="rgb(167, 169, 172)" style="stroke-width: 0.05;"></line>
                                <line x1="0" x2="40" y1="4" y2="4" stroke="rgb(167, 169, 172)" style="stroke-width: 0.05;"></line>
                                <line x1="0" x2="40" y1="5" y2="5" stroke="rgb(167, 169, 172)" style="stroke-width: 0.05;"></line>
                                <line x1="0" x2="40" y1="5.975" y2="5.975" stroke="rgb(167, 169, 172)" style="stroke-width: 0.05;"></line>
                                <line x1="0.025" x2="0.025" y1="0" y2="6" stroke="rgb(167, 169, 172)" style="stroke-width: 0.05;"></line>
                                <line x1="1" x2="1" y1="0" y2="6" stroke="rgb(167, 169, 172)" style="stroke-width: 0.05;"></line>
                                <line x1="2" x2="2" y1="0" y2="6" stroke="rgb(167, 169, 172)" style="stroke-width: 0.05;"></line>
                                <line x1="3" x2="3" y1="0" y2="6" stroke="rgb(167, 169, 172)" style="stroke-width: 0.05;"></line>
                                <line x1="4" x2="4" y1="0" y2="6" stroke="rgb(167, 169, 172)" style="stroke-width: 0.05;"></line>
                                <line x1="5" x2="5" y1="0" y2="6" stroke="rgb(167, 169, 172)" style="stroke-width: 0.05;"></line>
                                <line x1="6" x2="6" y1="0" y2="6" stroke="rgb(167, 169, 172)" style="stroke-width: 0.05;"></line>
                                <line x1="7" x2="7" y1="0" y2="6" stroke="rgb(167, 169, 172)" style="stroke-width: 0.05;"></line>
                                <line x1="8" x2="8" y1="0" y2="6" stroke="rgb(167, 169, 172)" style="stroke-width: 0.05;"></line>
                                <line x1="9" x2="9" y1="0" y2="6" stroke="rgb(167, 169, 172)" style="stroke-width: 0.05;"></line>
                                <line x1="10" x2="10" y1="0" y2="6" stroke="rgb(167, 169, 172)" style="stroke-width: 0.05;"></line>
                                <line x1="11" x2="11" y1="0" y2="6" stroke="rgb(167, 169, 172)" style="stroke-width: 0.05;"></line>
                                <line x1="12" x2="12" y1="0" y2="6" stroke="rgb(167, 169, 172)" style="stroke-width: 0.05;"></line>
                                <line x1="13" x2="13" y1="0" y2="6" stroke="rgb(167, 169, 172)" style="stroke-width: 0.05;"></line>
                                <line x1="14" x2="14" y1="0" y2="6" stroke="rgb(167, 169, 172)" style="stroke-width: 0.05;"></line>
                                <line x1="15" x2="15" y1="0" y2="6" stroke="rgb(167, 169, 172)" style="stroke-width: 0.05;"></line>
                                <line x1="16" x2="16" y1="0" y2="6" stroke="rgb(167, 169, 172)" style="stroke-width: 0.05;"></line>
                                <line x1="17" x2="17" y1="0" y2="6" stroke="rgb(167, 169, 172)" style="stroke-width: 0.05;"></line>
                                <line x1="18" x2="18" y1="0" y2="6" stroke="rgb(167, 169, 172)" style="stroke-width: 0.05;"></line>
                                <line x1="19" x2="19" y1="0" y2="6" stroke="rgb(167, 169, 172)" style="stroke-width: 0.05;"></line>
                                <line x1="20" x2="20" y1="0" y2="6" stroke="rgb(167, 169, 172)" style="stroke-width: 0.05;"></line>
                                <line x1="21" x2="21" y1="0" y2="6" stroke="rgb(167, 169, 172)" style="stroke-width: 0.05;"></line>
                                <line x1="22" x2="22" y1="0" y2="6" stroke="rgb(167, 169, 172)" style="stroke-width: 0.05;"></line>
                                <line x1="23" x2="23" y1="0" y2="6" stroke="rgb(167, 169, 172)" style="stroke-width: 0.05;"></line>
                                <line x1="24" x2="24" y1="0" y2="6" stroke="rgb(167, 169, 172)" style="stroke-width: 0.05;"></line>
                                <line x1="25" x2="25" y1="0" y2="6" stroke="rgb(167, 169, 172)" style="stroke-width: 0.05;"></line>
                                <line x1="26" x2="26" y1="0" y2="6" stroke="rgb(167, 169, 172)" style="stroke-width: 0.05;"></line>
                                <line x1="27" x2="27" y1="0" y2="6" stroke="rgb(167, 169, 172)" style="stroke-width: 0.05;"></line>
                                <line x1="28" x2="28" y1="0" y2="6" stroke="rgb(167, 169, 172)" style="stroke-width: 0.05;"></line>
                                <line x1="29" x2="29" y1="0" y2="6" stroke="rgb(167, 169, 172)" style="stroke-width: 0.05;"></line>
                                <line x1="30" x2="30" y1="0" y2="6" stroke="rgb(167, 169, 172)" style="stroke-width: 0.05;"></line>
                                <line x1="31" x2="31" y1="0" y2="6" stroke="rgb(167, 169, 172)" style="stroke-width: 0.05;"></line>
                                <line x1="32" x2="32" y1="0" y2="6" stroke="rgb(167, 169, 172)" style="stroke-width: 0.05;"></line>
                                <line x1="33" x2="33" y1="0" y2="6" stroke="rgb(167, 169, 172)" style="stroke-width: 0.05;"></line>
                                <line x1="34" x2="34" y1="0" y2="6" stroke="rgb(167, 169, 172)" style="stroke-width: 0.05;"></line>
                                <line x1="35" x2="35" y1="0" y2="6" stroke="rgb(167, 169, 172)" style="stroke-width: 0.05;"></line>
                                <line x1="36" x2="36" y1="0" y2="6" stroke="rgb(167, 169, 172)" style="stroke-width: 0.05;"></line>
                                <line x1="37" x2="37" y1="0" y2="6" stroke="rgb(167, 169, 172)" style="stroke-width: 0.05;"></line>
                                <line x1="38" x2="38" y1="0" y2="6" stroke="rgb(167, 169, 172)" style="stroke-width: 0.05;"></line>
                                <line x1="39" x2="39" y1="0" y2="6" stroke="rgb(167, 169, 172)" style="stroke-width: 0.05;"></line>
                                <line x1="39.975" x2="39.975" y1="0" y2="6" stroke="rgb(167, 169, 172)" style="stroke-width: 0.05;"></line>

                                    <svg width="0.95" height="0.95" ng-attr-x="{{row.X}}" ng-attr-y="{{row.Y}}" data-type="coordinates" ng-repeat="row in game.Roads track by $index">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="svg--1vtM9" viewBox="0 0 80 80" data-type="roadItem" name="Banker">
                                            <svg width="68px" height="68px" x="6" y="6" viewBox="0 0 80 80">
                                                <g transform="translate(0,78) scale(0.1,-0.1)" fill="{{row.Color}}" stroke="none" data-type="roadItemColor">
                                                    <path d="
    M275 764 c-103 -37 -194 -110 -228 -184 -81 -174 -56 -342 67 -466
    154 -153 398 -153 552 0 123 124 148 292 67 466 -21 44 -109 132 -153 153
    -105 48 -221 60 -305 31z m179 -123 c3 -4 19 -11 36 -15 40 -8 128 -96 136
    -136 4 -17 11 -33 15 -36 5 -3 9 -32 9 -64 0 -32 -4 -61 -9 -64 -4 -3 -11 -19
    -15 -36 -8 -40 -96 -128 -136 -136 -17 -4 -33 -11 -36 -15 -3 -5 -32 -9 -64
    -9 -32 0 -61 4 -64 9 -3 4 -19 11 -36 15 -40 8 -128 96 -136 136 -4 17 -11 33
    -15 36 -12 7 -12 121 0 128 4 3 11 19 15 36 8 40 96 128 136 136 17 4 33 11
    36 15 3 5 32 9 64 9 32 0 61 -4 64 -9z
" fill="{{row.Color}}"></path>
                                                </g>
                                            </svg>
                                        </svg>
                                    </svg>
                            
                            </svg>
                        </svg>
                </div>
                <div class="poker">
                    <div class="seat" ng-repeat="row in game.Seats track by $index">
                        <div class="seat-icon-{{row.Status}}">
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32">
                                <use xlink:href="#playersOnlineIcon">
                                    <g id="playersOnlineIcon">
                                        <circle cx="16" cy="7.2" r="5.2"></circle>
                                        <path d="M19.3 13.5c-2.1.9-4.6.9-6.7 0-4.8 1.9-7.8 5.6-7.8 11.5 0 1.1.1 1.7.3 2.7.4 0 .8.1 1.2.2.3.1.7.2 1 .2.4-7.2 1.4-7.7 1.5-7.7l.5-.7.7 9c.6.1 1.2.3 1.8.5 1 .4 2.3.8 4.1.8 1.8 0 3-.4 4.1-.8.7-.2 1.2-.5 1.9-.5l.7-9 .5.7c0 .1 1.1.5 1.5 7.7.3 0 .7-.1 1-.2.4-.1.8-.2 1.2-.2.2-1 .3-1.6.3-2.7.1-5.9-2.9-9.6-7.8-11.5z"></path>
                                    </g>
                                </use>
                            </svg>
                        </div>
                    </div>
                </div>
                <div class="roulette">
                    <div class="result" ng-repeat="row in game.Results track by $index">
                        <div class="live-casino-result-{{row.Color}}">
                            <p class="result-padding">{{row.Value}}</p>
                        </div>
                    </div>
                </div>
                <div class="game-title" title="{{game.Description}}" data-provider="{{game.GameProvider}}">
                    {{game.Name}}
                    <a ng-click="item.isExpanded= !item.isExpanded" title="Game info" href=""><div class="infoCircle">i</div></a>
                </div>
            </div>
        </div>
    </div>
</div>


@{
    var playText = !string.IsNullOrEmpty(Model.PlayButtonText) ? Model.PlayButtonText : Umbraco.GetDictionaryValue("[Games]PlayButtonText", "Play");
    var demoText = !string.IsNullOrEmpty(Model.DemoButtonText) ? Model.DemoButtonText : Umbraco.GetDictionaryValue("[Games]DemoButtonText", "Demo");
    var agreeText = !string.IsNullOrEmpty(Model.GameAgreeText) ? Model.GameAgreeText : Umbraco.GetDictionaryValue("[Games]GameModeAgreeTerms", "I do understand");
    if (Model.IsLoggedIn)
    {
        <div class="hidden">
            <div class="popup-default zoom-anim-dialog" id="game-mode-selection">
                <div class="top-wrap--popup"><span class="custom-close">X</span></div>
                <div class="demo-play-wrapper" style="background: url('{{ vm.selectedGame.length > 0 ? vm.getFullImage(vm.selectedGame[0].GameImages).Url : '' }}') no-repeat center;background-size: 100% 100%;'}">
                    <div class="dialog-heading">
                        <h3 class="heading-popup">
                            @*@Umbraco.GetDictionaryValue("[Games]SelectGameMode", "Game Mode")*@
                            {{vm.selectedGame[0].Name}}
                        </h3>
                    </div>
                    @*<div class="bottom-align" ng-show="vm.agreeTerms">*@
                    <div class="bottom-align">
                        <div class="demo-play-buttons">
                            <a href="" ng-href="{{'?gameId='+ vm.selectedGame[0].GameId +'&mode=play'}}" class="btn btn-large" target="_self" ng-disabled="!vm.agreeTerms" ng-click="vm.openGame($event)">@playText</a>                                         '
                            <a href="" ng-href="{{'?gameId='+ vm.selectedGame[0].GameId +'&mode=demo'}}" class="btn btn-large" target="_self" ng-disabled="!vm.agreeTerms" ng-click="vm.openGame($event)">@demoText</a>
                        </div>
                        <div class="demo-play-buttons">
                            @if (!string.IsNullOrEmpty(agreeText))
                            {
                                @*@if (!string.IsNullOrEmpty(Model.GameMessage))
                                    {
                                        <div class="game-terms">
                                            @Html.Raw(Model.GameMessage)
                                        </div>*@
                                <div class="checkbox-static">
                                    <label for="agreeToGameTerms">
                                        <input class="checkbox-static--input" id="agreeToGameTerms" type="checkbox" required ng-click="vm.agreeTerms=!vm.agreeTerms" ng-checked="vm.agreeTerms" />
                                        <span class="checkbox-static--text">@agreeText</span>
                                    </label>
                                </div>
                            }
                            else
                            {
                                <input type="hidden" ng-init="vm.agreeTerms=true" />
                            }
                        </div>
                        @if (Model.PageImages.Any())
                        {
                            <hr />
                            <div class="demo-play-images">

                                @foreach (var item in Model.PageImages)
                                {
                                    var media = Umbraco.Media(item.Key);
                                    <img src="@media.Url" alt="@media.Name" />
                                }
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
}
