@inherits Umbraco.Web.Mvc.UmbracoViewPage<TotalCode.Core.Models.Pages.TicketPageViewModel>
@{
    Layout = "totalCodeLayout.cshtml";
    bool isFirst = true;
    var currentLanguage = Model.CurrentLanguage.TwoLetterISOLanguageName;
}

<section class="black-main--default contact-tickets new-tickets">
    @if (Model.Ticket != null)
    {

        <div ng-controller="ticketController as vm"
             ng-init="vm.replyForm.ticketId = @(Model.Ticket.Id);vm.showReplyBox = @Model.OpenReply.ToString().ToLower()">
            <div class="active-tiket">
                <div class="top-line--tiket">
                    <a class="link-back--page text-back" style="position:relative;" href="@Model.BackUrl">
                        <span>@Umbraco.GetDictionaryValue("[Help]Back", "Back")</span>
                    </a>

                    @if (Model.IsActive)
                    {
                        <div ng-controller="closeTicketController as vm">
                            <a class="button button-close"
                               ng-disabled="vm.processing"
                               ng-class="{'disabled' : vm.processing}"
                               ng-init="vm.ticket.ticketId = '@Model.Ticket.Id'"
                               ng-click="vm.closeTicket()">@Umbraco.GetDictionaryValue("[Help]CloseTicket", "Close Ticket")</a>
                        </div>

                        <div class="hide">
                            <div class="popup-default new-ticket default-offset zoom-anim-dialog" id="close-ticket">
                                <div ng-controller="closeTicketConfirmController as vm">
                                    <form name="closeTicket" ng-submit="vm.submit('@Model.Ticket.Id')" novalidate>
                                        <input type="hidden" name="tenantUid" value="@Model.TenantUid" />
                                        <div class="top-wrap--popup"><span class="custom-close">X</span></div>
                                        <p>
                                            @Umbraco.GetDictionaryValue("[Help]CloseTicketConfirm", "Confirm close ticket?")
                                        </p>
                                        <div class="height-36"></div>
                                        <div class="item--input-label small-offset">
                                            <button class="popup-button button" ng-disabled="vm.processing" ng-class="{'disabled' : vm.processing}" type="submit">@Umbraco.GetDictionaryValue("[Help]Ok", "Ok")</button>
                                            <span class="valid-error" ng-show="vm.hasError">@Umbraco.GetDictionaryValue("[ServerErrors]UnhandledError", "Unhandled Error")</span>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <div class="status-ticket--wrapper">
                    <span class="status-ticket">@(Model.IsActive ? Umbraco.GetDictionaryValue("[Others]ActiveTicket", "Active Ticket") : Umbraco.GetDictionaryValue("[Others]ClosedTicket", "Closed Ticket"))</span>
                    @{
                        var createdDate = Model.Ticket.CreateDate.FormatDate();
                        if (currentLanguage == "fa")
                        {
                            createdDate = createdDate.Replace("at ", "");
                        }
                    }
                    <span class="status-ticket--date">@createdDate</span>
                </div>
                <h1 class="black-main--head">@Model.Ticket.Title</h1>

                @if (Model.IsActive)
                {
                    <div class="reply-wrapper" ng-show="vm.showReplyBox" ng-cloak>
                        <p class="reply-names">@Umbraco.GetDictionaryValue("[Help]Reply", "Reply")</p>
                        <div class="reply-message--send">
                            <form ng-submit="vm.submit()" name="createMessage">
                                <input type="hidden" name="tenantUid" value="@Model.TenantUid" />
                                <div class="reply-message__content">
                                    <textarea ng-model="vm.replyForm.messageText">@Model.Ticket.Description</textarea>

                                    <div class="upload-file--send">
                                        <div class="upload-file is-message mr-10" ng-repeat="item in vm.items">
                                            <div class="upload-file--name">
                                                <div>
                                                    <a ng-href="{{ item.path }}" href="{{ item.path }}" target="_blank">
                                                        <img src="/img/file-icon.svg" alt="">
                                                    </a>
                                                    <p><span ng-show="vm.progressPercentage < 100">@Umbraco.GetDictionaryValue("[Help]Uploading", "Uploading") </span>{{ item.name }}</p>
                                                </div>
                                                <button type="button" class="delete-file" ng-click="vm.remove(item)">
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14"><g><g><path d="M4.525 3.818a.5.5 0 0 1 .707 0L7 5.586l1.768-1.768a.5.5 0 0 1 .707 0l.707.707a.5.5 0 0 1 0 .707L8.414 7l1.768 1.768a.5.5 0 0 1 0 .707l-.707.707a.5.5 0 0 1-.707 0L7 8.414l-1.768 1.768a.5.5 0 0 1-.707 0l-.707-.707a.5.5 0 0 1 0-.707L5.586 7 3.818 5.232a.5.5 0 0 1 0-.707zM7 14A7 7 0 1 0 7 0a7 7 0 0 0 0 14z" /></g></g></svg>
                                                </button>
                                            </div>
                                            <div ng-show="vm.progressPercentage < 100" class="load-progress"><span style="width:{{ file.progressPercentage }}%;"></span></div>
                                        </div>
                                    </div>
                                </div>
                                <div class="reply-form--send">
                                    <button class="button-reply" ng-class="{'disabled' : !vm.replyForm.messageText || vm.processing}" ng-disabled="!vm.replyForm.messageText || vm.processing" type="submit">
                                        @Umbraco.GetDictionaryValue("[Help]Send", "Send")
                                    </button>
                                    <div class="file-input-wrapper upload-file--form" ngf-pattern="'image/*,application/pdf'" ngf-select="vm.upload($file)">
                                        <label for="upload-file">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="10" height="10" viewBox="0 0 12 12"><g><g><path d="M0 5.5A.5.5 0 0 1 .5 5H5V.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5V5h4.5a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5H7v4.5a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5V7H.5a.5.5 0 0 1-.5-.5z" /></g></g></svg>@Umbraco.GetDictionaryValue("[Help]AttachFile", "Attach File")
                                        </label>
                                    </div>
                                    @*<div class="file-input-wrapper upload-file--form">
                                <label for="upload-file">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="10" height="10" viewBox="0 0 12 12"><g><g><path d="M0 5.5A.5.5 0 0 1 .5 5H5V.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5V5h4.5a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5H7v4.5a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5V7H.5a.5.5 0 0 1-.5-.5z" /></g></g></svg>@Umbraco.GetDictionaryValue("[Help]AttachFile")
                                </label>
                                <input id="upload-file" type="file" name="image">
                            </div>*@
                                </div>
                            </form>
                        </div>
                    </div>
                }
                    <div id="MainTicketMessages">
                        @Html.Partial("_TotalCodeTicketMessageList", Model.Ticket.TicketResponseMessages.ToList(), new ViewDataDictionary {
                       { "currentLanguage", Model.CurrentLanguage.TwoLetterISOLanguageName },{ "NewMessageText", Umbraco.GetDictionaryValue("[Help]NewMessage", "New Message")},
                       { "IsActive",Model.IsActive} })
                    </div>
                <div class="new-ticket--fixed"><a class="popup button closed-mobile" href="#close-ticket" rel="modal:open">@Umbraco.GetDictionaryValue("[Help]Close", "Close")&nbsp;@Umbraco.GetDictionaryValue("[Help]Ticket", "Ticket")</a></div>
            </div>
        </div>

        @section Scripts
                        { 
        <script>
            function UpdateTicketComments(response) {
                if (response.TicketId == @Model.Ticket.Id) {
                    $('.loader').show();
                    var url = '/umbraco/surface/ticket/GetMessagesForTicket';
                    var data = {
                        "id": response.TicketId ,
                        "tenantUid": settings.tenantUid,
                        "language": '@Model.CurrentLanguage.TwoLetterISOLanguageName',
                        "messageText": '@Umbraco.GetDictionaryValue("[Help]NewMessage", "New Message")',
                        "isActive":'@Model.IsActive'
                    };
                    $.post(url, data,
                        function (response) {
                            $("#MainTicketMessages").html("");
                            $("#MainTicketMessages").html(response);
                            $('.loader').fadeOut();
                            $(window).scrollTop($('#firstDiv').offset().top);
                        });
                }
            }
        </script>
            }


    }
    else
    {
        <p class="color-white">@Umbraco.GetDictionaryValue("[Others]Please", "Please") <a class="link-data popup" href="#popup-login" rel="modal:open">@Umbraco.GetDictionaryValue("[Login]Login", "Login")</a> @Umbraco.GetDictionaryValue("[Others]ToContinue", "To Continue")</p>
    }
</section>