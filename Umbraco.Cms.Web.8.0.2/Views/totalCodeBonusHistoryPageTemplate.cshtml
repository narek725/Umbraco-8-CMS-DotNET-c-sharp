@inherits Umbraco.Web.Mvc.UmbracoViewPage<TotalCode.Core.Models.Pages.BonusHistoryPageViewModel>
@{
    Layout = "totalCodeLayout.cshtml";
}


<section class="black-main" ng-controller="allBonusTransactionHistoryFilterController as vm" ng-init="vm.viewPort = 'desktop'">
    <div class="left-sidebar">
        @Html.Partial("_TotalCodeAccountMenu")
    </div>
    <div class="main-container">
        <div class="heading--main-container">
            <h1 class="black-main--head">@Model.Title</h1>
            <div class="filter-button--wrapper" id="filter-button--wrapper">
                <button class="button filter-button" id="filter-open" ng-disabled="!vm.ready">@Umbraco.GetDictionaryValue("[TransactionHistory]Filter", "Filter")</button>
                <div class="filter-hidden">
                    <form action="">
                        <input type="hidden" name="tenantUid" value="@Model.TenantUid" />
                        <div class="filter-hidden--items">
                            <div class="filter-date">
                                <div class="filter-date--items">
                                    <div class="item--label">
                                        <label class="default-label" for="start-date">@Umbraco.GetDictionaryValue("[TransactionHistory]StartDate", "Start Date")</label>
                                    </div>
                                    <div class="item--input">
                                        <input class="filter-date datapicker input-black" id="start-date" type="text">
                                    </div>
                                </div>
                                <div class="filter-date--items">
                                    <div class="item--label">
                                        <label class="default-label" for="end-date">@Umbraco.GetDictionaryValue("[TransactionHistory]EndDate", "End Date")</label>
                                    </div>
                                    <div class="item--input">
                                        <input class="filter-date datapicker input-black" id="end-date" type="text">
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="filter-hidden--items">
                            <div class="filter-buttons">
                                <button class="button send-button" type="button"
                                        ng-class="{'disabled' : vm.processing}"
                                        ng-disabled="vm.processing"
                                        ng-click="vm.applyFilters()">
                                    @Umbraco.GetDictionaryValue("[TransactionHistory]ApplyFilters", "Apply Filters")
                                </button>
                                <div class="mt-10" ng-show="vm.processing">
                                    @if (TempData["FormSpinnerImage"] != null)
                                    {
                                        <img src="@TempData["FormSpinnerImage"]" />

                                    }
                                    else
                                    {
                                        <img src="~/Media/img/tail-spin.svg" />
                                    }
                                </div>
                                <button class="reset" type="button" ng-click="vm.resetFilters()">@Umbraco.GetDictionaryValue("[TransactionHistory]ResetFilters", "Reset Filters")</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <div class="mobile-filter"><a class="open-popup button filter-button button-filter--mobile" rel="modal:open" href="#popup-trnfilter--mobile">@Umbraco.GetDictionaryValue("[TransactionHistory]Filter", "Filter")</a></div>
        <div class="table-history--wrapper">
            <table class="table-history" id="tableHistory" ng-controller="allBonusTransactionHistoryFilterController as vm" ng-cloak>
                <thead ng-if="vm.bonustransactions === null || vm.bonustransactions.length == 0">
                    <tr>
                        <th width="10"></th>
                        <th width="100">@Umbraco.GetDictionaryValue("[BonusTransactionHistory]Name", "Name")</th>
                        <th width="90">@Umbraco.GetDictionaryValue("[BonusTransactionHistory]Type", "Type")</th>
                        <th width="96">@Umbraco.GetDictionaryValue("[BonusTransactionHistory]Status", "Status")</th>
                        <th width="92">@Umbraco.GetDictionaryValue("[BonusTransactionHistory]Redemption Status", "Redemption Status")</th>
                        <th width="92">@Umbraco.GetDictionaryValue("[BonusTransactionHistory]Bonus Applied", "Bonus Applied")</th>
                    </tr>
                </thead>
                <tbody>
                    <tr ng-repeat="(key,transaction) in vm.bonustransactions | orderBy: '-BonusApplied'">
                        <td style="padding:0">
                            <table class="bonus-table-history table-history">
                                <thead ng-if="key === 0">
                                    <tr>
                                        <th width="10" style="width: 45px;"></th>
                                        <th width="100">@Umbraco.GetDictionaryValue("[BonusTransactionHistory]Name", "Name")</th>
                                        <th width="90">@Umbraco.GetDictionaryValue("[BonusTransactionHistory]Type", "Type")</th>
                                        <th width="96">@Umbraco.GetDictionaryValue("[BonusTransactionHistory]Status", "Status")</th>
                                        <th width="92">@Umbraco.GetDictionaryValue("[BonusTransactionHistory]Redemption Status", "Redemption Status")</th>
                                        <th width="92">@Umbraco.GetDictionaryValue("[BonusTransactionHistory]Bonus Applied", "Bonus Applied")</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td width="10" style="width: 45px;">
                                            <a data-toggle="collapse" href="#rdata-body-{{key}}" role="button" aria-expanded="false" aria-controls="rdata-{{key}}" class="title-accordion collapsed">
                                                <div class="name--status">
                                                    <span class="accord-status"></span>
                                                </div>
                                            </a>
                                        </td>
                                        <td width="100">{{ transaction.Name }}</td>
                                        <td width="90">{{ transaction.TypeDictionary}}</td>
                                        <td width="96">{{ transaction.StatusStrDictionary}}</td>
                                        <td width="92">{{ transaction.RedemptionStatusStrDictionary}}</td>
                                        <td width="92" class="date-format">{{ transaction.FormattedDate }}</td>
                                    </tr>
                                </tbody>
                            </table>
                            <div>
                                <div class="accordion accordion--redemption-data">
                                    <div class="collapse" id="rdata-body-{{key}}" style="overflow:hidden; height:0;">
                                        <table class="table-history">
                                            <thead>
                                                <tr>
                                                    <th width="130">@Umbraco.GetDictionaryValue("[BonusTransactionHistory]Redemption Name", "Redemption Name")</th>
                                                    <th width="90">@Umbraco.GetDictionaryValue("[BonusTransactionHistory]Redemption Qualifier Requirement", "Redemption Qualifier Requirement")</th>
                                                    <th width="90">@Umbraco.GetDictionaryValue("[BonusTransactionHistory]Redemption Qualifier Progress", "Redemption Qualifier Progress")</th>
                                                    <th width="90">@Umbraco.GetDictionaryValue("[BonusTransactionHistory]Redemption Qualifier Difference", "Redemption Qualifier Difference")</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr ng-repeat="rData in transaction.RedemptionData">
                                                    <td>{{ rData.Name }}</td>
                                                    <td>{{ rData.QualifierRequirement }}</td>
                                                    <td>{{ rData.QualifierProgress }}</td>
                                                    <td>{{ rData.QualifierDifference }}</td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</section>

@section Scripts{
    <script type="text/javascript" src="~/scripts/bootstrap-3.4.1.min.js"></script>
}

@section AdditionalHeaders{
    <style>
        .bonus-table-history td {
            padding: 5px 10px 25px 16px !important;
        }

        .accordion--redemption-data .table-history {
            border-top: 1px solid #313031;
        }

        .bonus-table-history .title-accordion.collapsed .accord-status:after{
            opacity: 1 !important;
        }

        .bonus-table-history .title-accordion .accord-status:after{
            opacity: 0 !important;
        }
    </style>
}